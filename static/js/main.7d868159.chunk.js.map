{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","logo.svg","components/Section/Section.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Section","title","className","styles","Title","Notification","message","Statistics","good","neutral","bad","total","positive","FeedbackList","FeedbackOptions","onLeaveFeedback","options","countFeedback","Button","map","name","type","FeedbackBtn","onClick","FeedbackItems","Feedback","state","e","preventDefault","console","log","currentTarget","currentState","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","FeedbackForm","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,sCAAsC,YAAc,uC,yDCArFD,EAAOC,QAAU,CAAC,aAAe,mC,oGCDlB,I,yFCWAC,EARC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,mCACE,oBAAIC,UAAWC,IAAOC,MAAtB,SAA8BH,O,iBCErBI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,6BAAKA,OC0CIC,EAzCI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,mCACGD,EACC,qBAAIT,UAAWC,IAAOU,aAAtB,UACE,uCAEE,qCAAQL,QAEV,0CAEE,qCAAQC,QAEV,sCAEE,qCAAQC,QAEV,wCAEE,qCAAQC,QAEV,oDAEE,qCAAQC,EAAR,aAIJ,cAAC,EAAD,CAAcN,QAAS,yB,gBCLhBQ,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAClCC,EAAkBF,EAAlBE,cACFC,EAASF,EAAQG,KAAI,SAACC,GAC1B,OACE,wBAEEC,KAAK,SACLD,KAAMA,EACNlB,UAAWC,IAAOmB,YAClBC,QAASN,EALX,SAOGG,GANIA,MAUX,OACE,mCACE,oBAAIlB,UAAWC,IAAOU,aAAtB,SACE,oBAAIX,UAAWC,IAAOqB,cAAtB,SAAsCN,SCdxCO,E,4MACJC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,cAAgB,SAACU,GACfA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,cAAcX,MAC5B,IAAMY,EAAeL,EAAEI,cAAcX,KACrC,EAAKa,UAAS,SAACC,GAAD,sBACXF,EAAeE,EAAUF,GAAgB,MAE5C,EAAKG,sB,EAGPA,mBAAqB,WACnB,MAA+B,EAAKT,MAEpC,OAFA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB0B,gCAAkC,WAChC,IAAQ5B,EAAS,EAAKkB,MAAdlB,KAEFG,GAAQwB,EADd,eAAQA,sBAGR,OADiBE,KAAKC,MAAO9B,EAAOG,EAAS,M,4CAI/C,WACE,IACEM,EAGEsB,KAHFtB,cACAkB,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,gCAEF,EAA+BG,KAAKb,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBK,EAAkB,CAAEE,iBAE1B,OACE,sBAAKf,UAAWC,IAAOqC,aAAvB,UACE,cAAC,EAAD,CAASvC,MAAM,0BACf,cAAC,EAAD,CAAiBe,QAJP,CAAC,OAAQ,UAAW,OAIGD,gBAAiBA,IAClD,cAAC,EAAD,CAASd,MAAM,eACf,cAAC,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,SAAUwB,a,GAlDGK,aAyDRhB,ICnDAiB,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d868159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackList\":\"FeedbackOptions_FeedbackList__1Yq4e\",\"FeedbackBtn\":\"FeedbackOptions_FeedbackBtn__1ChfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackList\":\"Statistics_FeedbackList__2mG8G\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styles from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title }) => {\n  return (\n    <>\n      <h2 className={styles.Title}>{title}</h2>\n    </>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","const Notification = ({ message }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n    </>\n  );\n};\n\nexport default Notification;\n","import styles from \"./Statistics.module.css\";\nimport Notification from \"./Notification\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\n  return (\n    <>\n      {total ? (\n        <ul className={styles.FeedbackList}>\n          <li>\n            Good:\n            <span> {good}</span>\n          </li>\n          <li>\n            Neutral:\n            <span> {neutral}</span>\n          </li>\n          <li>\n            Bad:\n            <span> {bad}</span>\n          </li>\n          <li>\n            Total:\n            <span> {total}</span>\n          </li>\n          <li>\n            Positive feedback:\n            <span> {positive}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={\"No feedback given\"} />\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positive: PropTypes.number,\n};\n\nexport default Statistics;\n","import styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  const { countFeedback } = onLeaveFeedback;\n  const Button = options.map((name) => {\n    return (\n      <button\n        key={name}\n        type=\"button\"\n        name={name}\n        className={styles.FeedbackBtn}\n        onClick={countFeedback}\n      >\n        {name}\n      </button>\n    );\n  });\n  return (\n    <>\n      <ul className={styles.FeedbackList}>\n        <li className={styles.FeedbackItems}>{Button}</li>\n      </ul>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import { Component } from \"react\";\nimport styles from \"./Feedback.module.css\";\nimport Section from \"../Section/Section\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = (e) => {\n    e.preventDefault();\n    console.log(e.currentTarget.name);\n    const currentState = e.currentTarget.name;\n    this.setState((prevState) => ({\n      [currentState]: prevState[currentState] + 1,\n    }));\n    this.countTotalFeedback();\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const { countTotalFeedback } = this;\n    const total = countTotalFeedback();\n    const positive = Math.round((good / total) * 100);\n    return positive;\n  };\n\n  render() {\n    const {\n      countFeedback,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    const { good, neutral, bad } = this.state;\n    const onLeaveFeedback = { countFeedback };\n    const names = [\"good\", \"neutral\", \"bad\"];\n    return (\n      <div className={styles.FeedbackForm}>\n        <Section title=\"Please leave feedback\" />\n        <FeedbackOptions options={names} onLeaveFeedback={onLeaveFeedback} />\n        <Section title=\"Statistics\" />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positive={countPositiveFeedbackPercentage()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import logo from './logo.svg';\nimport './App.css';\nimport Feedback from './components/Feedback/Feedback.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}